#!/usr/bin/env python
# coding: utf-8

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:  
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...  
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# 

# In[12]:


def fibo(i):
    if i == 0 or i == 1: return 1
    else: return fibo(i-2)+fibo(i-1)


# In[13]:


def fibo_smart(i):  
    
    arr = [1, 1]  
    while len(arr) < i :  
        arr.append(0)    
        
    if i == 0 or i == 1: return 1
    
    else:  
        for n in range(2, i):
            arr[n]=arr[n-1]+arr[n-2]
    return arr[i-1]  


# In[14]:


n = 0
sum = 0
for i in range(0,40):
        n = fibo(i)
        if n < 4000000 and n % 2 == 0:
            sum += n
print(sum)


# In[15]:


n = 0
sum = 0
for i in range(1,40):
        n = fibo_smart(i)
        if n < 4000000 and n % 2 == 0:
            sum += n
print(ssum)


# In[ ]:




